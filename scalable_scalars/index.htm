<!DOCTYPE html>
<meta charset="utf-8">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="viewport" content="width=device-width,user-scalable=no,minimal-ui">
<title>Scalable scalar visualization</title>

<head>
    <link href="http://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css">
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>

    <link href="dashboard.css" rel="stylesheet">
    <script src="one_dash_plot.js" charset="utf-8"></script>
    <script src="constants.js" charset="utf-8"></script>
    <script src="utilities.js" charset="utf-8"></script>
    <script src="random.js" charset="utf-8"></script>

    <script>
        var randomStream = new Random();
        //randomStream.normal(SCALAR_KPI_META.p1.target*2, SCALAR_KPI_META.p1.target*2);

        function One() {
            this.consumption=1;
            this.acceleration=1;
            this.displacement=1;
            this.horsepower=1;
//            this.cylinders=1;
//            this.weight=1;
//            this.year=1;
//            this.origin=1;
//            this.name=1;
        }
        
        SCALAR_KPI_META = {
            consumption:     {name: "Fuel consumption",  method: "",     methodShort: "",        units: "liters/100km",          targetType: TARGET_LO_ISGOOD, target:5, maximum:50, format: function(n){return (d3.round(n,2)==d3.round(n,0))?d3.round(n,0):d3.format(".2r")(n)}},//50
            acceleration:     {name: "Acceleration",      method: "",     methodShort: "",        units: "s to 100km/h",        targetType: TARGET_HI_ISGOOD, target:1, maximum:20, format: function(n){return (d3.round(n,2)==d3.round(n,0))?d3.round(n,0):d3.format(".2r")(n)}},//20
            displacement:     {name: "Displacement",      method: "",     methodShort: "",        units: "liters",         targetType: TARGET_LO_ISGOOD, target:1, maximum:10, format: function(n){return (d3.round(n,2)==d3.round(n,0))?d3.round(n,0):d3.format(".2r")(n)}},//500
            horsepower:     {name: "Horse power",       method: "",     methodShort: "",        units: "♞",     targetType: TARGET_HI_ISGOOD, target:100, maximum:500, format: function(n){return (d3.round(n,2)==d3.round(n,0))?d3.round(n,0):d3.format(".2r")(n)}},//500
            cylinders:     {name: "Cylinders",         method: "",     methodShort: "",        units: "",          targetType: TARGET_LO_ISGOOD, target:1, maximum:10, format: function(n){return (d3.round(n,2)==d3.round(n,0))?d3.round(n,0):d3.format(".2r")(n)}},//10
            weight:     {name: "Weight",            method: "",     methodShort: "",        units: "tons",          targetType: TARGET_NA, target:1, maximum:3, format: d3.format(".3g")},
            year:     {name: "Year",              method: "",     methodShort: "",        units: "",          targetType: TARGET_HI_ISGOOD, target:1, maximum:90, format: function(n){return (d3.round(n,2)==d3.round(n,0))?d3.round(n,0):d3.format(".2r")(n)}},//10
            origin:     {name: "Origin",            method: "",     methodShort: "",        units: "",          targetType: TARGET_NA, target:1, maximum:10, format: function(n){return (d3.round(n,2)==d3.round(n,0))?d3.round(n,0):d3.format(".2r")(n)}},//10
            name:     {name: "name",            method: "",     methodShort: "",        units: "",          targetType: TARGET_NA, target:1, maximum:10, format: function(n){return (d3.round(n,2)==d3.round(n,0))?d3.round(n,0):d3.format(".2r")(n)}},//10
            empty:  {name: "",                  method: "",     methodShort: "",        units: "",          targetType: TARGET_LO_ISGOOD, target:0, maximum:1, format: d3.format(".3g")}
        }

        LIMIT_BULLET_MIN = 0; // samples
        LIMIT_BULLET_CEN = 1;
        LIMIT_BULLET_MAX = 4;
        LIMIT_PCOORDS_MIN = 3;
        LIMIT_PCOORDS_CEN = 4;
        LIMIT_PCOORDS_MAX = 200;
        LIMIT_DASHPLOT_MIN = 3;
        LIMIT_DASHPLOT_CEN = 4;
        LIMIT_DASHPLOT_MAX = 350;
        LIMIT_BOXPLOT_MIN = 300;
        LIMIT_BOXPLOT_CEN = 400;
        LIMIT_BOXPLOT_MAX = 100500;


    window.onload = function(){
        d3.tsv("auto-mpg.txt", function(error, data) {

        N_MAX = data.length;
        d3.select(".slider").attr("max",N_MAX);


        data.forEach(function(d) {
            d.consumption = +d.consumption;
            d.cylinders = +d.cylinders;
            d.displacement = +d.displacement/1000;
            d.horsepower = +d.horsepower;
            d.weight = +d.weight/1000;
            d.year = +d.year;
            d.acceleration = +d.acceleration;
            d.origin = +1;
            d.name = +1;
        });



            samplesAll = data;

        scalarKpiVis = d3.dashPlot().stepy(75).height(window.innerHeight*0.5).width(600);
//        samplesAll = [];
        samplesSelected = [];
//        for (i=0; i<N_MAX; i++)samplesAll.push(new One());


        d3.select(".slider")[0][0].onchange = function() {
            update(this.value)
        }
        iWannaHoverOff = function(assetID){
            d3.selectAll("." + ASSET_ID + "#" + assetID).classed("active", false);
        }
        iWannaHoverOn = function(assetID){
            d3.selectAll("." + ASSET_ID + "#" + assetID).classed("active", true);
        }

        var kpiGroup = d3.select("#container")
            .append("svg")
            .append("g")
            .attr("class","scalarKpiVis")
            .attr("transform", "translate(" + (10) + "," + (50) + ")");


        getOpacity = function(n, min, cen, max){
            if (n<=min) return 0;
            if (n<cen) return Math.log(n-min)/Math.log(cen)
            if (n<max) return 1-Math.log(n)/Math.log(max)
            if (n>=max) return 0;
        }

        update = function(n){
            d3.select("#nsamples").text(n);
            kpiGroup.data([samplesAll.slice(0,Math.min(n, samplesAll.length))]).call(scalarKpiVis);

            d3.select("head").selectAll("#opacityBasedOnSamples0")
                .data([null]).enter().append("style")
                .attr("id", "opacityBasedOnSamples0")
                .attr("type", "text/css");

            d3.select("head").selectAll("#opacityBasedOnSamples1")
                .data([null]).enter().append("style")
                .attr("id", "opacityBasedOnSamples1")
                .attr("type", "text/css");

            d3.select("head").selectAll("#opacityBasedOnSamples2")
                .data([null]).enter().append("style")
                .attr("id", "opacityBasedOnSamples2")
                .attr("type", "text/css");

            d3.select("head").selectAll("#opacityBasedOnSamples3")
                .data([null]).enter().append("style")
                .attr("id", "opacityBasedOnSamples3")
                .attr("type", "text/css");

            d3.selectAll("#opacityBasedOnSamples0")
                .text(".opacityBasedOnSamples0{opacity: "+getOpacity(n, LIMIT_BULLET_MIN,LIMIT_BULLET_CEN,LIMIT_BULLET_MAX)+"}");

            d3.selectAll("#opacityBasedOnSamples1")
                .text(".opacityBasedOnSamples1{opacity: "+getOpacity(n, LIMIT_PCOORDS_MIN,LIMIT_PCOORDS_CEN,LIMIT_PCOORDS_MAX)+"}");

            d3.selectAll("#opacityBasedOnSamples2")
                .text(".opacityBasedOnSamples2{opacity: "+getOpacity(n, LIMIT_DASHPLOT_MIN,LIMIT_DASHPLOT_CEN,LIMIT_DASHPLOT_MAX)+"}");

            d3.selectAll("#opacityBasedOnSamples3")
                .text(".opacityBasedOnSamples3{opacity: "+getOpacity(n, LIMIT_BOXPLOT_MIN,LIMIT_BOXPLOT_CEN,LIMIT_BOXPLOT_MAX)+"}");


        d3.selectAll("."+ASSET_ID+".hoverable").on("mouseover",
            function () {iWannaHoverOn(d3.select(this).attr("id"))});
        d3.selectAll("."+ASSET_ID+".hoverable").on("mouseout",
            function () {iWannaHoverOff(d3.select(this).attr("id"))});

        }
        update(1);



    })}

    </script>
</head>
<body>
    <div>
    <p>This is an idea of scalable data visualization for sets of scalar values</p>
    <p>It transforms Bullet graph → Parallel coordinates → Dash plot → Box plot</p>
    <p>based on the number of samples in the data. Move the slider to see yourself:</p>

</div>


    <span>Samples:</span>
    <input class = "slider" type="range" name="points" min="1" max="50" value="1">
    <span id = "nsamples"></span>
    <div id="container"></div>

    <div><p>//this is a very early prototype. please be back in a short while for the improved look, feel and meaning</p></div>
    <div><p>You can read more in the description <a href = "http://angieskazka.prosite.com/288854/3543566/-interactive-data-graphics/scalable-scalars-(a-big-idea)">here</a></a></p></div>
    <div><p>You can also <a href = "http://angieskazka.prosite.com/118591/contact">tell me what you think of it</a></p></div>
    </body>
